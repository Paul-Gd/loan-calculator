{"version":3,"sources":["webpack:///./node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":["getModifierKey","opts","enabled","modifierKey","keyPressed","key","event","keyNotPressed","directionEnabled","mode","dir","chart","undefined","indexOf","getEnabledScalesByPoint","point","scale","x","y","scales","scaleIds","Object","keys","i","length","top","bottom","left","right","getScaleUnderPoint","axis","enabledScales","scaleItem","push","chartStates","WeakMap","getState","state","get","originalScaleLimits","updatedScaleLimits","handlers","panDelta","set","zoomDelta","zoom","center","range","max","min","newRange","centerPoint","isHorizontal","minPercent","Math","getValueForPixel","getLimit","scaleLimits","prop","fallback","limit","original","id","options","updateRange","limits","scaleOpts","minRange","minLimit","Infinity","maxLimit","cmin","cmax","offset","parse","integerChange","v","isNaN","round","OFFSETS","second","minute","hour","day","week","month","quarter","year","panNumericalScale","delta","canZoom","prevStart","prevEnd","time","newMin","getPixelForValue","newMax","panNonLinearScale","zoomFunctions","category","maxIndex","getLabels","existCategoryFromMaxZoom","default","panFunctions","lastLabelIndex","stepDelta","width","height","scaleLength","stepSize","abs","applied","logarithmic","timeseries","removeMissingScales","opt","storeOriginalScaleLimits","previous","shouldUpdateScaleLimits","doZoom","amount","fn","type","getCenter","ca","chartArea","transition","focalPoint","zoomOptions","overScaleMode","xEnabled","yEnabled","update","onZoom","getRange","pixel0","pixel1","v0","v1","zoomScale","scaleId","resetZoom","scaleOptions","onZoomComplete","getZoomLevel","origRange","getOriginalRange","level","panScale","storedDelta","pan","panOptions","onPan","getInitialScaleBounds","scaleBounds","removeHandler","handler","target","removeEventListener","addHandler","oldHandler","addEventListener","mouseMove","dragStart","dragging","dragEnd","zoomStart","onZoomStart","onZoomRejected","offsetX","offsetY","getBoundingClientRect","clientX","clientY","mouseDown","drag","canvas","computeDragRect","beginPoint","endPoint","chartWidth","chartHeight","zoomX","zoomY","mouseUp","threshold","rect","distanceX","distanceY","distance","sqrt","p0","p1","zoomRect","setTimeout","wheel","cancelable","preventDefault","deltaY","wheelPreconditions","speed","addDebouncedHandler","name","delay","timeout","clearTimeout","debounce","createEnabler","recognizer","srcEvent","panning","pointerType","onPanRejected","handlePinch","e","pointers","zoomPercent","pinch","pinchX","pinchY","p","pinchAxes","handlePan","deltaX","panScales","hammers","startHammer","mc","Manager","add","Pinch","on","startPinch","endPinch","Pan","enable","onPanStart","panEndTimeout","startPan","onPanComplete","endPan","version","defaults","start","_args","prototype","hasOwnProperty","call","console","warn","args","isZoomedOrPanned","originalMin","originalMax","beforeUpdate","wheelOptions","dragOptions","ownerDocument","addListeners","beforeDatasetsDraw","ctx","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","stop","removeListeners","remove","destroy","delete","stopHammer","removeState","window","document","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","now","Date","setTimeoutContext","context","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","replace","log","apply","this","arguments","TypeError","output","index","source","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","val","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","inputTarget","domHandler","ev","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offsetDelta","prevDelta","prevInput","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","button","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","compute","actions","touchAction","recognizers","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","DIRECTION_UP","preventSrc","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","createInputInstance","toggleCssProps","item","force","stopped","curRecognizer","existing","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","Tap","Swipe","Rotate","Press"],"mappings":"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","file":"static/js/1.f0d077c1.chunk.js","sourcesContent":["/*!\n* chartjs-plugin-zoom v1.2.1\n* undefined\n * (c) 2016-2022 chartjs-plugin-zoom Contributors\n * Released under the MIT License\n */\nimport Hammer from 'hammerjs';\nimport { each, valueOrDefault, callback, sign } from 'chart.js/helpers';\n\nconst getModifierKey = opts => opts && opts.enabled && opts.modifierKey;\nconst keyPressed = (key, event) => key && event[key + 'Key'];\nconst keyNotPressed = (key, event) => key && !event[key + 'Key'];\n\n/**\n * @param {string|function} mode can be 'x', 'y' or 'xy'\n * @param {string} dir can be 'x' or 'y'\n * @param {import('chart.js').Chart} chart instance of the chart in question\n * @returns {boolean}\n */\nfunction directionEnabled(mode, dir, chart) {\n  if (mode === undefined) {\n    return true;\n  } else if (typeof mode === 'string') {\n    return mode.indexOf(dir) !== -1;\n  } else if (typeof mode === 'function') {\n    return mode({chart}).indexOf(dir) !== -1;\n  }\n\n  return false;\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call. No arguments are passed.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay);\n    return delay;\n  };\n}\n\n/** This function use for check what axis now under mouse cursor.\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale}\n */\nfunction getScaleUnderPoint({x, y}, chart) {\n  const scales = chart.scales;\n  const scaleIds = Object.keys(scales);\n  for (let i = 0; i < scaleIds.length; i++) {\n    const scale = scales[scaleIds[i]];\n    if (y >= scale.top && y <= scale.bottom && x >= scale.left && x <= scale.right) {\n      return scale;\n    }\n  }\n  return null;\n}\n\n/** This function return only one scale whose position is under mouse cursor and which direction is enabled.\n * If under mouse hasn't scale, then return all other scales which 'mode' is diffrent with overScaleMode.\n * So 'overScaleMode' works as a limiter to scale the user-selected scale (in 'mode') only when the cursor is under the scale,\n * and other directions in 'mode' works as before.\n * Example: mode = 'xy', overScaleMode = 'y' -> it's means 'x' - works as before, and 'y' only works for one scale when cursor is under it.\n * options.overScaleMode can be a function if user want zoom only one scale of many for example.\n * @param {string} mode - 'xy', 'x' or 'y'\n * @param {{x: number, y: number}} point - the mouse location\n * @param {import('chart.js').Chart} [chart] instance of the chart in question\n * @return {import('chart.js').Scale[]}\n */\nfunction getEnabledScalesByPoint(mode, point, chart) {\n  const scale = getScaleUnderPoint(point, chart);\n\n  if (scale && directionEnabled(mode, scale.axis, chart)) {\n    return [scale];\n  }\n\n  const enabledScales = [];\n  each(chart.scales, function(scaleItem) {\n    if (!directionEnabled(mode, scaleItem.axis, chart)) {\n      enabledScales.push(scaleItem);\n    }\n  });\n  return enabledScales;\n}\n\nconst chartStates = new WeakMap();\n\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleLimits: {},\n      updatedScaleLimits: {},\n      handlers: {},\n      panDelta: {}\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\n\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\n\nfunction zoomDelta(scale, zoom, center) {\n  const range = scale.max - scale.min;\n  const newRange = range * (zoom - 1);\n\n  const centerPoint = scale.isHorizontal() ? center.x : center.y;\n  // `scale.getValueForPixel()` can return a value less than the `scale.min` or\n  // greater than `scale.max` when `centerPoint` is outside chartArea.\n  const minPercent = Math.max(0, Math.min(1,\n    (scale.getValueForPixel(centerPoint) - scale.min) / range || 0\n  ));\n\n  const maxPercent = 1 - minPercent;\n\n  return {\n    min: newRange * minPercent,\n    max: newRange * maxPercent\n  };\n}\n\nfunction getLimit(state, scale, scaleLimits, prop, fallback) {\n  let limit = scaleLimits[prop];\n  if (limit === 'original') {\n    const original = state.originalScaleLimits[scale.id][prop];\n    limit = valueOrDefault(original.options, original.scale);\n  }\n  return valueOrDefault(limit, fallback);\n}\n\nfunction updateRange(scale, {min, max}, limits, zoom = false) {\n  const state = getState(scale.chart);\n  const {id, axis, options: scaleOpts} = scale;\n\n  const scaleLimits = limits && (limits[id] || limits[axis]) || {};\n  const {minRange = 0} = scaleLimits;\n  const minLimit = getLimit(state, scale, scaleLimits, 'min', -Infinity);\n  const maxLimit = getLimit(state, scale, scaleLimits, 'max', Infinity);\n\n  const cmin = Math.max(min, minLimit);\n  const cmax = Math.min(max, maxLimit);\n  const range = zoom ? Math.max(cmax - cmin, minRange) : scale.max - scale.min;\n  if (cmax - cmin !== range) {\n    if (minLimit > cmax - range) {\n      min = cmin;\n      max = cmin + range;\n    } else if (maxLimit < cmin + range) {\n      max = cmax;\n      min = cmax - range;\n    } else {\n      const offset = (range - cmax + cmin) / 2;\n      min = cmin - offset;\n      max = cmax + offset;\n    }\n  } else {\n    min = cmin;\n    max = cmax;\n  }\n  scaleOpts.min = min;\n  scaleOpts.max = max;\n\n  state.updatedScaleLimits[scale.id] = {min, max};\n\n  // return true if the scale range is changed\n  return scale.parse(min) !== scale.min || scale.parse(max) !== scale.max;\n}\n\nfunction zoomNumericalScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  const newRange = {min: scale.min + delta.min, max: scale.max - delta.max};\n  return updateRange(scale, newRange, limits, true);\n}\n\nconst integerChange = (v) => v === 0 || isNaN(v) ? 0 : v < 0 ? Math.min(Math.round(v), -1) : Math.max(Math.round(v), 1);\n\nfunction existCategoryFromMaxZoom(scale) {\n  const labels = scale.getLabels();\n  const maxIndex = labels.length - 1;\n\n  if (scale.min > 0) {\n    scale.min -= 1;\n  }\n  if (scale.max < maxIndex) {\n    scale.max += 1;\n  }\n}\n\nfunction zoomCategoryScale(scale, zoom, center, limits) {\n  const delta = zoomDelta(scale, zoom, center);\n  if (scale.min === scale.max && zoom < 1) {\n    existCategoryFromMaxZoom(scale);\n  }\n  const newRange = {min: scale.min + integerChange(delta.min), max: scale.max - integerChange(delta.max)};\n  return updateRange(scale, newRange, limits, true);\n}\n\nfunction scaleLength(scale) {\n  return scale.isHorizontal() ? scale.width : scale.height;\n}\n\nfunction panCategoryScale(scale, delta, limits) {\n  const labels = scale.getLabels();\n  const lastLabelIndex = labels.length - 1;\n  let {min, max} = scale;\n  // The visible range. Ticks can be skipped, and thus not reliable.\n  const range = Math.max(max - min, 1);\n  // How many pixels of delta is required before making a step. stepSize, but limited to max 1/10 of the scale length.\n  const stepDelta = Math.round(scaleLength(scale) / Math.max(range, 10));\n  const stepSize = Math.round(Math.abs(delta / stepDelta));\n  let applied;\n  if (delta < -stepDelta) {\n    max = Math.min(max + stepSize, lastLabelIndex);\n    min = range === 1 ? max : max - range;\n    applied = max === lastLabelIndex;\n  } else if (delta > stepDelta) {\n    min = Math.max(0, min - stepSize);\n    max = range === 1 ? min : min + range;\n    applied = min === 0;\n  }\n\n  return updateRange(scale, {min, max}, limits) || applied;\n}\n\nconst OFFSETS = {\n  second: 500, // 500 ms\n  minute: 30 * 1000, // 30 s\n  hour: 30 * 60 * 1000, // 30 m\n  day: 12 * 60 * 60 * 1000, // 12 h\n  week: 3.5 * 24 * 60 * 60 * 1000, // 3.5 d\n  month: 15 * 24 * 60 * 60 * 1000, // 15 d\n  quarter: 60 * 24 * 60 * 60 * 1000, // 60 d\n  year: 182 * 24 * 60 * 60 * 1000 // 182 d\n};\n\nfunction panNumericalScale(scale, delta, limits, canZoom = false) {\n  const {min: prevStart, max: prevEnd, options} = scale;\n  const round = options.time && options.time.round;\n  const offset = OFFSETS[round] || 0;\n  const newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart + offset) - delta);\n  const newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd + offset) - delta);\n  const {min: minLimit = -Infinity, max: maxLimit = Infinity} = canZoom && limits && limits[scale.axis] || {};\n  if (isNaN(newMin) || isNaN(newMax) || newMin < minLimit || newMax > maxLimit) {\n    // At limit: No change but return true to indicate no need to store the delta.\n    // NaN can happen for 0-dimension scales (either because they were configured\n    // with min === max or because the chart has 0 plottable area).\n    return true;\n  }\n  return updateRange(scale, {min: newMin, max: newMax}, limits, canZoom);\n}\n\nfunction panNonLinearScale(scale, delta, limits) {\n  return panNumericalScale(scale, delta, limits, true);\n}\n\nconst zoomFunctions = {\n  category: zoomCategoryScale,\n  default: zoomNumericalScale,\n};\n\nconst panFunctions = {\n  category: panCategoryScale,\n  default: panNumericalScale,\n  logarithmic: panNonLinearScale,\n  timeseries: panNonLinearScale,\n};\n\nfunction shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits) {\n  const {id, options: {min, max}} = scale;\n  if (!originalScaleLimits[id] || !updatedScaleLimits[id]) {\n    return true;\n  }\n  const previous = updatedScaleLimits[id];\n  return previous.min !== min || previous.max !== max;\n}\n\nfunction removeMissingScales(limits, scales) {\n  each(limits, (opt, key) => {\n    if (!scales[key]) {\n      delete limits[key];\n    }\n  });\n}\n\nfunction storeOriginalScaleLimits(chart, state) {\n  const {scales} = chart;\n  const {originalScaleLimits, updatedScaleLimits} = state;\n\n  each(scales, function(scale) {\n    if (shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits)) {\n      originalScaleLimits[scale.id] = {\n        min: {scale: scale.min, options: scale.options.min},\n        max: {scale: scale.max, options: scale.options.max},\n      };\n    }\n  });\n\n  removeMissingScales(originalScaleLimits, scales);\n  removeMissingScales(updatedScaleLimits, scales);\n  return originalScaleLimits;\n}\n\nfunction doZoom(scale, amount, center, limits) {\n  const fn = zoomFunctions[scale.type] || zoomFunctions.default;\n  callback(fn, [scale, amount, center, limits]);\n}\n\nfunction getCenter(chart) {\n  const ca = chart.chartArea;\n  return {\n    x: (ca.left + ca.right) / 2,\n    y: (ca.top + ca.bottom) / 2,\n  };\n}\n\n/**\n * @param chart The chart instance\n * @param {number | {x?: number, y?: number, focalPoint?: {x: number, y: number}}} amount The zoom percentage or percentages and focal point\n * @param {string} [transition] Which transition mode to use. Defaults to 'none'\n */\nfunction zoom(chart, amount, transition = 'none') {\n  const {x = 1, y = 1, focalPoint = getCenter(chart)} = typeof amount === 'number' ? {x: amount, y: amount} : amount;\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy', overScaleMode} = zoomOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 1 && directionEnabled(mode, 'x', chart);\n  const yEnabled = y !== 1 && directionEnabled(mode, 'y', chart);\n  const enabledScales = overScaleMode && getEnabledScalesByPoint(overScaleMode, focalPoint, chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoom(scale, x, focalPoint, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoom(scale, y, focalPoint, limits);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction getRange(scale, pixel0, pixel1) {\n  const v0 = scale.getValueForPixel(pixel0);\n  const v1 = scale.getValueForPixel(pixel1);\n  return {\n    min: Math.min(v0, v1),\n    max: Math.max(v0, v1)\n  };\n}\n\nfunction zoomRect(chart, p0, p1, transition = 'none') {\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy'} = zoomOptions;\n\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n\n  each(chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      updateRange(scale, getRange(scale, p0.x, p1.x), limits, true);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      updateRange(scale, getRange(scale, p0.y, p1.y), limits, true);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(zoomOptions.onZoom, [{chart}]);\n}\n\nfunction zoomScale(chart, scaleId, range, transition = 'none') {\n  storeOriginalScaleLimits(chart, getState(chart));\n  const scale = chart.scales[scaleId];\n  updateRange(scale, range, undefined, true);\n  chart.update(transition);\n}\n\nfunction resetZoom(chart, transition = 'default') {\n  const state = getState(chart);\n  const originalScaleLimits = storeOriginalScaleLimits(chart, state);\n\n  each(chart.scales, function(scale) {\n    const scaleOptions = scale.options;\n    if (originalScaleLimits[scale.id]) {\n      scaleOptions.min = originalScaleLimits[scale.id].min.options;\n      scaleOptions.max = originalScaleLimits[scale.id].max.options;\n    } else {\n      delete scaleOptions.min;\n      delete scaleOptions.max;\n    }\n  });\n  chart.update(transition);\n  callback(state.options.zoom.onZoomComplete, [{chart}]);\n}\n\nfunction getOriginalRange(state, scaleId) {\n  const original = state.originalScaleLimits[scaleId];\n  if (!original) {\n    return;\n  }\n  const {min, max} = original;\n  return valueOrDefault(max.options, max.scale) - valueOrDefault(min.options, min.scale);\n}\n\nfunction getZoomLevel(chart) {\n  const state = getState(chart);\n  let min = 1;\n  let max = 1;\n  each(chart.scales, function(scale) {\n    const origRange = getOriginalRange(state, scale.id);\n    if (origRange) {\n      const level = Math.round(origRange / (scale.max - scale.min) * 100) / 100;\n      min = Math.min(min, level);\n      max = Math.max(max, level);\n    }\n  });\n  return min < 1 ? min : max;\n}\n\nfunction panScale(scale, delta, limits, state) {\n  const {panDelta} = state;\n  // Add possible cumulative delta from previous pan attempts where scale did not change\n  const storedDelta = panDelta[scale.id] || 0;\n  if (sign(storedDelta) === sign(delta)) {\n    delta += storedDelta;\n  }\n  const fn = panFunctions[scale.type] || panFunctions.default;\n  if (callback(fn, [scale, delta, limits])) {\n    // The scale changed, reset cumulative delta\n    panDelta[scale.id] = 0;\n  } else {\n    // The scale did not change, store cumulative delta\n    panDelta[scale.id] = delta;\n  }\n}\n\nfunction pan(chart, delta, enabledScales, transition = 'none') {\n  const {x = 0, y = 0} = typeof delta === 'number' ? {x: delta, y: delta} : delta;\n  const state = getState(chart);\n  const {options: {pan: panOptions, limits}} = state;\n  const {mode = 'xy', onPan} = panOptions || {};\n\n  storeOriginalScaleLimits(chart, state);\n\n  const xEnabled = x !== 0 && directionEnabled(mode, 'x', chart);\n  const yEnabled = y !== 0 && directionEnabled(mode, 'y', chart);\n\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      panScale(scale, x, limits, state);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      panScale(scale, y, limits, state);\n    }\n  });\n\n  chart.update(transition);\n\n  callback(onPan, [{chart}]);\n}\n\nfunction getInitialScaleBounds(chart) {\n  const state = getState(chart);\n  const scaleBounds = {};\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min, max} = state.originalScaleLimits[scaleId] || {min: {}, max: {}};\n    scaleBounds[scaleId] = {min: min.scale, max: max.scale};\n  }\n\n  return scaleBounds;\n}\n\nfunction isZoomedOrPanned(chart) {\n  const scaleBounds = getInitialScaleBounds(chart);\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min: originalMin, max: originalMax} = scaleBounds[scaleId];\n\n    if (originalMin !== undefined && chart.scales[scaleId].min !== originalMin) {\n      return true;\n    }\n\n    if (originalMax !== undefined && chart.scales[scaleId].max !== originalMax) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction removeHandler(chart, type) {\n  const {handlers} = getState(chart);\n  const handler = handlers[type];\n  if (handler && handler.target) {\n    handler.target.removeEventListener(type, handler);\n    delete handlers[type];\n  }\n}\n\nfunction addHandler(chart, target, type, handler) {\n  const {handlers, options} = getState(chart);\n  const oldHandler = handlers[type];\n  if (oldHandler && oldHandler.target === target) {\n    // already attached\n    return;\n  }\n  removeHandler(chart, type);\n  handlers[type] = (event) => handler(chart, event, options);\n  handlers[type].target = target;\n  target.addEventListener(type, handlers[type]);\n}\n\nfunction mouseMove(chart, event) {\n  const state = getState(chart);\n  if (state.dragStart) {\n    state.dragging = true;\n    state.dragEnd = event;\n    chart.update('none');\n  }\n}\n\nfunction zoomStart(chart, event, zoomOptions) {\n  const {onZoomStart, onZoomRejected} = zoomOptions;\n  if (onZoomStart) {\n    const {left: offsetX, top: offsetY} = event.target.getBoundingClientRect();\n    const point = {\n      x: event.clientX - offsetX,\n      y: event.clientY - offsetY\n    };\n    if (callback(onZoomStart, [{chart, event, point}]) === false) {\n      callback(onZoomRejected, [{chart, event}]);\n      return false;\n    }\n  }\n}\n\nfunction mouseDown(chart, event) {\n  const state = getState(chart);\n  const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n  if (keyPressed(getModifierKey(panOptions), event) || keyNotPressed(getModifierKey(zoomOptions.drag), event)) {\n    return callback(zoomOptions.onZoomRejected, [{chart, event}]);\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  state.dragStart = event;\n\n  addHandler(chart, chart.canvas, 'mousemove', mouseMove);\n}\n\nfunction computeDragRect(chart, mode, beginPoint, endPoint) {\n  const {left: offsetX, top: offsetY} = beginPoint.target.getBoundingClientRect();\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  let {top, left, right, bottom, width: chartWidth, height: chartHeight} = chart.chartArea;\n\n  if (xEnabled) {\n    left = Math.min(beginPoint.clientX, endPoint.clientX) - offsetX;\n    right = Math.max(beginPoint.clientX, endPoint.clientX) - offsetX;\n  }\n\n  if (yEnabled) {\n    top = Math.min(beginPoint.clientY, endPoint.clientY) - offsetY;\n    bottom = Math.max(beginPoint.clientY, endPoint.clientY) - offsetY;\n  }\n  const width = right - left;\n  const height = bottom - top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom,\n    width,\n    height,\n    zoomX: xEnabled && width ? 1 + ((chartWidth - width) / chartWidth) : 1,\n    zoomY: yEnabled && height ? 1 + ((chartHeight - height) / chartHeight) : 1\n  };\n}\n\nfunction mouseUp(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart) {\n    return;\n  }\n\n  removeHandler(chart, 'mousemove');\n  const {mode, onZoomComplete, drag: {threshold = 0}} = state.options.zoom;\n  const rect = computeDragRect(chart, mode, state.dragStart, event);\n  const distanceX = directionEnabled(mode, 'x', chart) ? rect.width : 0;\n  const distanceY = directionEnabled(mode, 'y', chart) ? rect.height : 0;\n  const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n\n  // Remove drag start and end before chart update to stop drawing selected area\n  state.dragStart = state.dragEnd = null;\n\n  if (distance <= threshold) {\n    state.dragging = false;\n    chart.update('none');\n    return;\n  }\n\n  zoomRect(chart, {x: rect.left, y: rect.top}, {x: rect.right, y: rect.bottom}, 'zoom');\n\n  setTimeout(() => (state.dragging = false), 500);\n  callback(onZoomComplete, [{chart}]);\n}\n\nfunction wheelPreconditions(chart, event, zoomOptions) {\n  // Before preventDefault, check if the modifier key required and pressed\n  if (keyNotPressed(getModifierKey(zoomOptions.wheel), event)) {\n    callback(zoomOptions.onZoomRejected, [{chart, event}]);\n    return;\n  }\n\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n\n  // Prevent the event from triggering the default behavior (eg. Content scrolling).\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  // Firefox always fires the wheel event twice:\n  // First without the delta and right after that once with the delta properties.\n  if (event.deltaY === undefined) {\n    return;\n  }\n  return true;\n}\n\nfunction wheel(chart, event) {\n  const {handlers: {onZoomComplete}, options: {zoom: zoomOptions}} = getState(chart);\n\n  if (!wheelPreconditions(chart, event, zoomOptions)) {\n    return;\n  }\n\n  const rect = event.target.getBoundingClientRect();\n  const speed = 1 + (event.deltaY >= 0 ? -zoomOptions.wheel.speed : zoomOptions.wheel.speed);\n  const amount = {\n    x: speed,\n    y: speed,\n    focalPoint: {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  };\n\n  zoom(chart, amount);\n\n  if (onZoomComplete) {\n    onZoomComplete();\n  }\n}\n\nfunction addDebouncedHandler(chart, name, handler, delay) {\n  if (handler) {\n    getState(chart).handlers[name] = debounce(() => callback(handler, [{chart}]), delay);\n  }\n}\n\nfunction addListeners(chart, options) {\n  const canvas = chart.canvas;\n  const {wheel: wheelOptions, drag: dragOptions, onZoomComplete} = options.zoom;\n\n  // Install listeners. Do this dynamically based on options so that we can turn zoom on and off\n  // We also want to make sure listeners aren't always on. E.g. if you're scrolling down a page\n  // and the mouse goes over a chart you don't want it intercepted unless the plugin is enabled\n  if (wheelOptions.enabled) {\n    addHandler(chart, canvas, 'wheel', wheel);\n    addDebouncedHandler(chart, 'onZoomComplete', onZoomComplete, 250);\n  } else {\n    removeHandler(chart, 'wheel');\n  }\n  if (dragOptions.enabled) {\n    addHandler(chart, canvas, 'mousedown', mouseDown);\n    addHandler(chart, canvas.ownerDocument, 'mouseup', mouseUp);\n  } else {\n    removeHandler(chart, 'mousedown');\n    removeHandler(chart, 'mousemove');\n    removeHandler(chart, 'mouseup');\n  }\n}\n\nfunction removeListeners(chart) {\n  removeHandler(chart, 'mousedown');\n  removeHandler(chart, 'mousemove');\n  removeHandler(chart, 'mouseup');\n  removeHandler(chart, 'wheel');\n  removeHandler(chart, 'click');\n}\n\nfunction createEnabler(chart, state) {\n  return function(recognizer, event) {\n    const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n    if (!panOptions || !panOptions.enabled) {\n      return false;\n    }\n    const srcEvent = event && event.srcEvent;\n    if (!srcEvent) { // Sometimes Hammer queries this with a null event.\n      return true;\n    }\n    if (!state.panning && event.pointerType === 'mouse' && (\n      keyNotPressed(getModifierKey(panOptions), srcEvent) || keyPressed(getModifierKey(zoomOptions.drag), srcEvent))\n    ) {\n      callback(panOptions.onPanRejected, [{chart, event}]);\n      return false;\n    }\n    return true;\n  };\n}\n\nfunction pinchAxes(p0, p1) {\n  // fingers position difference\n  const pinchX = Math.abs(p0.clientX - p1.clientX);\n  const pinchY = Math.abs(p0.clientY - p1.clientY);\n\n  // diagonal fingers will change both (xy) axes\n  const p = pinchX / pinchY;\n  let x, y;\n  if (p > 0.3 && p < 1.7) {\n    x = y = true;\n  } else if (pinchX > pinchY) {\n    x = true;\n  } else {\n    y = true;\n  }\n  return {x, y};\n}\n\nfunction handlePinch(chart, state, e) {\n  if (state.scale) {\n    const {center, pointers} = e;\n    // Hammer reports the total scaling. We need the incremental amount\n    const zoomPercent = 1 / state.scale * e.scale;\n    const rect = e.target.getBoundingClientRect();\n    const pinch = pinchAxes(pointers[0], pointers[1]);\n    const mode = state.options.zoom.mode;\n    const amount = {\n      x: pinch.x && directionEnabled(mode, 'x', chart) ? zoomPercent : 1,\n      y: pinch.y && directionEnabled(mode, 'y', chart) ? zoomPercent : 1,\n      focalPoint: {\n        x: center.x - rect.left,\n        y: center.y - rect.top\n      }\n    };\n\n    zoom(chart, amount);\n\n    // Keep track of overall scale\n    state.scale = e.scale;\n  }\n}\n\nfunction startPinch(chart, state) {\n  if (state.options.zoom.pinch.enabled) {\n    state.scale = 1;\n  }\n}\n\nfunction endPinch(chart, state, e) {\n  if (state.scale) {\n    handlePinch(chart, state, e);\n    state.scale = null; // reset\n    callback(state.options.zoom.onZoomComplete, [{chart}]);\n  }\n}\n\nfunction handlePan(chart, state, e) {\n  const delta = state.delta;\n  if (delta) {\n    state.panning = true;\n    pan(chart, {x: e.deltaX - delta.x, y: e.deltaY - delta.y}, state.panScales);\n    state.delta = {x: e.deltaX, y: e.deltaY};\n  }\n}\n\nfunction startPan(chart, state, event) {\n  const {enabled, overScaleMode, onPanStart, onPanRejected} = state.options.pan;\n  if (!enabled) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const point = {\n    x: event.center.x - rect.left,\n    y: event.center.y - rect.top\n  };\n\n  if (callback(onPanStart, [{chart, event, point}]) === false) {\n    return callback(onPanRejected, [{chart, event}]);\n  }\n\n  state.panScales = overScaleMode && getEnabledScalesByPoint(overScaleMode, point, chart);\n  state.delta = {x: 0, y: 0};\n  clearTimeout(state.panEndTimeout);\n  handlePan(chart, state, event);\n}\n\nfunction endPan(chart, state) {\n  state.delta = null;\n  if (state.panning) {\n    state.panEndTimeout = setTimeout(() => (state.panning = false), 500);\n    callback(state.options.pan.onPanComplete, [{chart}]);\n  }\n}\n\nconst hammers = new WeakMap();\nfunction startHammer(chart, options) {\n  const state = getState(chart);\n  const canvas = chart.canvas;\n  const {pan: panOptions, zoom: zoomOptions} = options;\n\n  const mc = new Hammer.Manager(canvas);\n  if (zoomOptions && zoomOptions.pinch.enabled) {\n    mc.add(new Hammer.Pinch());\n    mc.on('pinchstart', () => startPinch(chart, state));\n    mc.on('pinch', (e) => handlePinch(chart, state, e));\n    mc.on('pinchend', (e) => endPinch(chart, state, e));\n  }\n\n  if (panOptions && panOptions.enabled) {\n    mc.add(new Hammer.Pan({\n      threshold: panOptions.threshold,\n      enable: createEnabler(chart, state)\n    }));\n    mc.on('panstart', (e) => startPan(chart, state, e));\n    mc.on('panmove', (e) => handlePan(chart, state, e));\n    mc.on('panend', () => endPan(chart, state));\n  }\n\n  hammers.set(chart, mc);\n}\n\nfunction stopHammer(chart) {\n  const mc = hammers.get(chart);\n  if (mc) {\n    mc.remove('pinchstart');\n    mc.remove('pinch');\n    mc.remove('pinchend');\n    mc.remove('panstart');\n    mc.remove('pan');\n    mc.remove('panend');\n    mc.destroy();\n    hammers.delete(chart);\n  }\n}\n\nvar version = \"1.2.1\";\n\nvar plugin = {\n  id: 'zoom',\n\n  version,\n\n  defaults: {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      threshold: 10,\n      modifierKey: null,\n    },\n    zoom: {\n      wheel: {\n        enabled: false,\n        speed: 0.1,\n        modifierKey: null\n      },\n      drag: {\n        enabled: false,\n        modifierKey: null\n      },\n      pinch: {\n        enabled: false\n      },\n      mode: 'xy',\n    }\n  },\n\n  start: function(chart, _args, options) {\n    const state = getState(chart);\n    state.options = options;\n\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'enabled')) {\n      console.warn('The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.');\n    }\n\n    if (Hammer) {\n      startHammer(chart, options);\n    }\n\n    chart.pan = (delta, panScales, transition) => pan(chart, delta, panScales, transition);\n    chart.zoom = (args, transition) => zoom(chart, args, transition);\n    chart.zoomScale = (id, range, transition) => zoomScale(chart, id, range, transition);\n    chart.resetZoom = (transition) => resetZoom(chart, transition);\n    chart.getZoomLevel = () => getZoomLevel(chart);\n    chart.getInitialScaleBounds = () => getInitialScaleBounds(chart);\n    chart.isZoomedOrPanned = () => isZoomedOrPanned(chart);\n  },\n\n  beforeEvent(chart) {\n    const state = getState(chart);\n    if (state.panning || state.dragging) {\n      // cancel any event handling while panning or dragging\n      return false;\n    }\n  },\n\n  beforeUpdate: function(chart, args, options) {\n    const state = getState(chart);\n    state.options = options;\n    addListeners(chart, options);\n  },\n\n  beforeDatasetsDraw: function(chart, args, options) {\n    const {dragStart, dragEnd} = getState(chart);\n\n    if (dragEnd) {\n      const {left, top, width, height} = computeDragRect(chart, options.zoom.mode, dragStart, dragEnd);\n\n      const dragOptions = options.zoom.drag;\n      const ctx = chart.ctx;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n      ctx.fillRect(left, top, width, height);\n\n      if (dragOptions.borderWidth > 0) {\n        ctx.lineWidth = dragOptions.borderWidth;\n        ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n        ctx.strokeRect(left, top, width, height);\n      }\n      ctx.restore();\n    }\n  },\n\n  stop: function(chart) {\n    removeListeners(chart);\n\n    if (Hammer) {\n      stopHammer(chart);\n    }\n    removeState(chart);\n  },\n\n  panFunctions,\n\n  zoomFunctions\n};\n\nexport { plugin as default, pan, resetZoom, zoom, zoomScale };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}